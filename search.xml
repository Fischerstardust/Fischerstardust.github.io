<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>写在前面</title>
      <link href="2021/05/16/xie-zai-qian-mian/"/>
      <url>2021/05/16/xie-zai-qian-mian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>当你看到这句话的时候，提醒一下现在退出还来得及。。。这里本人不会表演平时的正能量人设，可能有损于社会主义核心价值观。</p><p>大概用了几天将自己的个人博客搭建好啦，虽然现在看起来还是很简单的，不过的确还是弄了好久。。。</p><p>本博客主要用于分享一些自己的一些学习经历，还有生活的一些经历以及个人感悟之类的。当然我没有开启评论区，因为总会有一些人，很是烦人，一开口就是故意搞你的那种，抱歉，我还不想听到，看到那些让人恶心的，不怀好意的话。这是我自己的世界，我说的算。</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516152547.jpg" alt="u=2595689240,1036598175&amp;fm=26&amp;gp=0"></p><p>大概能看到这个博客的人，都和我认识才对，而且大部分很熟。那么还是简单做个介绍，大概就是，我想在离开人世之前，留下些可能还算是有用的东西。回顾自己到现在的生活，好像一直过得不如意，不过，又会有几个人，过得平安顺遂呢？活得时间越长，我就越讨厌这个世界。还记得之前有同学问我为什么活着，那必然还是因为，不想让自己在世的父母担心，如果是我一个人，那么我自己怎么样都没有太大关系，反正也不过如此。如果问我为什么现在还活着，我还是喜欢夏尔的这句话：我曾是个软弱无力的小孩，但是我，为了让那些曾经侮辱过我的人受到相同的侮辱，而回到了这里。没错，也许是仇恨，也许是不甘，亦或是其他别的什么东西，人性是可怕的，接触的越多，我就越害怕受到伤害。</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516162515.jpeg" alt="u=462111169,1784264928&amp;fm=26&amp;gp=0"></p><p>但事实情况永远都是，因为看起来的人畜无害，好说话，从而导致的，成了所谓的老实人，哦对，现在应该还是个贬义词。我尝试与人为善，但总会遇到各种各样的问题，于是我开始反思，是不是自己做错了些什么，深深地自责感压得我透不过气，而那些给予我痛苦的人，也许是真的没有发现吧，往往这时候并不会在意，甚至会再来一刀。后来我渐渐的明白了，有些人不是故意的，是真的有意针对我自己，仅此而已。于是我选择了沉默，但那些人依然还是不依不饶，他们不在乎你究竟吃了几碗粉，他们只是单纯的想要你的命罢了。再后来我慢慢学会了抗争，学会说不，这个时候，就有另一个问题出现了，道德绑架，他们会用质疑的语气来向你开炮，通过站在道德制高点的方式，来批判，迫使我屈服，从而达到他们的目的，说白了都是因为利益罢了。</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516163551.jpg" alt="mmexport1621153834471"></p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516163242.jpg" alt="mmexport1621153837160"></p><p>自从被确诊为抑郁症，我发现之前糟糕的生活，变得更加糟糕了。不仅是因为自己的心情，更多的是周围的环境。和自己认为很好的朋友说起此事的时候，得到的回应多半是负面的，大概还是因为，网抑云这个梗太过深入人心了吧。所以就是，越说越悲伤，越说越难过，那种绝望感，不被理解的感觉，现在回想起来，胸口还依然隐隐作痛。那一句，“那我也是抑郁症”不知是不屑，还是只是一种无所谓的表达。慢慢的，我才发现，原来抑郁症最可怕的不是自己患上这个病，而是周围环境一直以来的负反馈，那种想要去找人求助，却鲜有人回应的绝望。这里还是要感谢在我最无助时刻给予我帮助和陪伴的朋友，没有因此抛弃我，在下很感激。现在想想当时在看完医生，第一次对朋友表示不满的时候，对方那暴躁的态度和几位友人对我表达的不解；现在想想着实可笑，当初为什么要道歉呢，明明对方之前让自己那么难受过好多次不表达，而自己稍有差池对方就表达出那种不满，我凭什么委曲求全，在回过头看看当时自己做过的那些事，现在想想自己也不过是对方情绪的垃圾桶罢了，呵，可笑至极。还有同组的同学，问她们点儿啥都如此费劲，藏着掖着的感觉让我都觉得尴尬，自己有啥消息去告诉人家的时候人家能掘地三尺，恨不得你犯了什么罪一样，本来好好的心情，也会被突如其来暴风骤雨般的各种牢骚搞得稀烂，特喵的老子以后才不管你们咋作妖，爱咋地咋地。好多事情回想起来，真是让人觉得恶心。。。人性不容试探，太危险了，不过，我应该也一样。</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516161058.jpg" alt="u=162321451,1519113323&amp;fm=26&amp;gp=0"></p><p>现在的我，已经藏起了悲伤，不会让人在看到我内心深处的伤疤，药还是继续吃，面对各路嘲讽，内心依然会不满，但不理就好了，不想那些不开心的事情。不为别的，曾经遇到的不愉快早已过去，毕竟未来会遇到更多的不愉快。话又说回来，自己还不知道到底能够活多少天呢，活一天算一天喽~特别能理解大工上吊那位兄弟的感受，只有相似的人，才能真正理解与宽容，剩下的，就随风散去吧。</p><p>向死而生，如果没有希望，那么就不会失望了。</p><p>昔日寒山问拾得曰：世间有人谤我、欺我、辱我、笑我、轻我、贱我、恶我、骗我、如何处治乎？拾得曰：只要忍他、让他、由他、避他、耐他、敬他、不要理他，再待几年你且看他。</p><p>最后，希望看到这篇帖子的朋友，事业有成，平安顺遂，所遇皆良人；希望我自己，都能每天见到初升的太阳。</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516163425.jpg" alt="mmexport1621152739161"></p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210516163438.jpg" alt="mmexport1621152731665"></p><p>Fischerstardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAMASK实例3--多晶镁</title>
      <link href="2021/05/14/damask-shi-li-3-duo-jing-mei/"/>
      <url>2021/05/14/damask-shi-li-3-duo-jing-mei/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DAMASK实例3–多晶镁"><a href="#DAMASK实例3–多晶镁" class="headerlink" title="DAMASK实例3–多晶镁"></a>DAMASK实例3–多晶镁</h1><h2 id="1-描述："><a href="#1-描述：" class="headerlink" title="1.描述："></a>1.描述：</h2><p>材料：镁（pheo power law)        HCP</p><p>总晶粒数：20</p><p>网格大小：64*64</p><p>取向：随机</p><p>大小形状：随机</p><p>时间：50；增量步：200；频率：1</p><p>载荷：X方向，.{F<del>1~~1</del>}=1e-3</p><p>相关文章链接： <a href="https://linkinghub.elsevier.com/retrieve/pii/S0927025618302714">文献</a></p><h2 id="2-计算求解"><a href="#2-计算求解" class="headerlink" title="2.计算求解"></a>2.计算求解</h2><p>建立材料文件和加载文件，接着输入：</p><pre class="line-numbers language-none"><code class="language-none">geom_check 20grains.geom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到vtr文件在Paraview中打开可以看到：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511114616.png" alt="image-20210511114616411" style="zoom:50%;"><p>接着进行求解，所需文件均在相关资料链接里。输入：</p><pre class="line-numbers language-none"><code class="language-none">DAMASK_spectral --geometry 20grains.geom --load tension.load<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到spectralOut文件。</p><p>接着输入：</p><pre class="line-numbers language-none"><code class="language-none">postResults 20grains_tension.spectralOut --cr f,p,orientation,texture,grainrotation --separation x,y,z --increments --range 200 200 1 --split<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在postProc文件夹中得到20grains_tension_inc200.txt格式的后处理文件，打开后如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511152038.png" alt="image-20210511152038019" style="zoom:67%;"><p>接着输入：</p><pre class="line-numbers language-none"><code class="language-none">vtk_rectilinearGrid 20grains_tension_inc200.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">vtk_addRectilinearGridData --data f,p,orientation,texture,grainrotation --vtk 20grains_tension_inc200_pos\(cell\).vtr 20grains_tension_inc200.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可得到经过后处理所得到的结果，如下图所示：</p><p><strong>应力</strong>：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511152730.png" alt="image-20210511152730829" style="zoom:50%;"><p><strong>应变</strong>：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511152825.png" alt="image-20210511152825280" style="zoom:50%;"><p>相关资料链接：<a href="https://pan.baidu.com/s/1wLHJAR0PElQy62xTbr-gZw">百度云</a>        提取码：omx9</p><p>Fischerstardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> DAMASK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAMASK实例2--BCC双相钢</title>
      <link href="2021/05/14/damask-shi-li-2-bcc-shuang-xiang-gang/"/>
      <url>2021/05/14/damask-shi-li-2-bcc-shuang-xiang-gang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DAMASK实例2–BCC双相钢"><a href="#DAMASK实例2–BCC双相钢" class="headerlink" title="DAMASK实例2–BCC双相钢"></a>DAMASK实例2–BCC双相钢</h1><h2 id="1-描述："><a href="#1-描述：" class="headerlink" title="1.描述："></a>1.描述：</h2><h4 id="材料：DP钢（pheno-power-law"><a href="#材料：DP钢（pheno-power-law" class="headerlink" title="材料：DP钢（pheno power law)"></a>材料：DP钢（pheno power law)</h4><h4 id="相的组成：铁素体：0-82-马氏体：0-18"><a href="#相的组成：铁素体：0-82-马氏体：0-18" class="headerlink" title="相的组成：铁素体：0.82    马氏体：0.18"></a>相的组成：铁素体：0.82    马氏体：0.18</h4><h4 id="总晶粒数：20"><a href="#总晶粒数：20" class="headerlink" title="总晶粒数：20"></a>总晶粒数：20</h4><h4 id="网格大小：64-64"><a href="#网格大小：64-64" class="headerlink" title="网格大小：64*64"></a>网格大小：64*64</h4><h4 id="取向：随机"><a href="#取向：随机" class="headerlink" title="取向：随机"></a>取向：随机</h4><h4 id="大小形状：随机"><a href="#大小形状：随机" class="headerlink" title="大小形状：随机"></a>大小形状：随机</h4><h4 id="时间：50；增量：100；输出频率：1"><a href="#时间：50；增量：100；输出频率：1" class="headerlink" title="时间：50；增量：100；输出频率：1"></a>时间：50；增量：100；输出频率：1</h4><h4 id="载荷：X方向加载；指定大小为F1-1-大小1e-3"><a href="#载荷：X方向加载；指定大小为F1-1-大小1e-3" class="headerlink" title="载荷：X方向加载；指定大小为F1~~1,大小1e-3"></a>载荷：X方向加载；指定大小为F<del>1~~1</del>,大小1e-3</h4><p>相关文献链接：<a href="https://linkinghub.elsevier.com/retrieve/pii/S1359645414005898">文献</a></p><p>加载情况示意图：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510223100.png" alt="image-20210510223100659" style="zoom: 67%;"><h2 id="2-计算求解"><a href="#2-计算求解" class="headerlink" title="2.计算求解"></a>2.计算求解</h2><p>输入：</p><pre class="line-numbers language-none"><code class="language-none">geom_check 20grains.geom <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成vtr文件，在Paraview中可以看到：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511100501.png" alt="image-20210511100501582" style="zoom:50%;"><p>加载文件及材料文件见资料链接。</p><p>接着输入：</p><pre class="line-numbers language-none"><code class="language-none">postResults 20grains_tension.spectralOut --cr f,p,orientation,texture,grainrotation --separation x,y,z --increments --range 100 100 1 --split<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以得到输出的应力应变文件。</p><p>依次输入：</p><pre class="line-numbers language-none"><code class="language-none">cd postProc/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">vtk_rectilinearGrid 20grains_tension_inc100.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">vtk_addRectilinearGridData --data f,p --vtk 20grains_tension_inc100_pos\(cell\).vtr 20grains_tension_inc100.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可得到后处理结果如下图所示：</p><p>应力分布：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511102611.png" alt="image-20210511102611285" style="zoom:67%;"><p>应变分布：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210511102636.png" alt="image-20210511102636575" style="zoom:67%;"><p>相关资料链接：<a href="https://pan.baidu.com/s/1_MscrEi-8uW8eoSC5-GfHg">百度云</a>        提取码：ohcs</p><p>Fischerstardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> DAMASK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAMASK实例1--二维多晶铝</title>
      <link href="2021/05/14/damask-shi-li-1-er-wei-duo-jing-lu/"/>
      <url>2021/05/14/damask-shi-li-1-er-wei-duo-jing-lu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DAMASK实例1–二维多晶铝"><a href="#DAMASK实例1–二维多晶铝" class="headerlink" title="DAMASK实例1–二维多晶铝"></a>DAMASK实例1–二维多晶铝</h1><h2 id="1-创建多晶模型"><a href="#1-创建多晶模型" class="headerlink" title="1.创建多晶模型"></a>1.创建多晶模型</h2><p>输入：</p><pre class="line-numbers language-none"><code class="language-none">seeds_fromRandom -N 20 --grid 64 64 1 &gt;20grains.seeds<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令随机生成20个seeds，64*64划分</p><pre class="line-numbers language-none"><code class="language-none">geom_fromVoronoiTessellation --grid 64 64 1 20grains.seeds<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令通过20个种子生成几何模型20grains.geom</p><pre class="line-numbers language-none"><code class="language-none">geom_check 20grains.geom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令生成可视的vtr文件，通过Paraview，上方选项如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510212459.png" alt="image-20210510212459808" style="zoom:80%;"><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510212518.png" alt="image-20210510212518882" style="zoom:150%;"><p>则可以看到生成的晶体模型：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510212535.png" alt="image-20210510212535330" style="zoom: 50%;"><h2 id="2-创建加载文件及材料属性文件"><a href="#2-创建加载文件及材料属性文件" class="headerlink" title="2.创建加载文件及材料属性文件"></a>2.创建加载文件及材料属性文件</h2><p>创建加载文件tension.load,如下图所示：</p><p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510213309.png" alt="image-20210510213309055"></p><p>在（1,1,1)方向施加力，总时间200，增量步400，每1步均输出结果保存。</p><p>在材料属性文件material.config中，定义20个晶粒，只有一个相，且输出我们需要的变量：f:应力，p:应变，如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510214716.png" alt="image-20210510214716822" style="zoom:67%;"><p>Al的材料参数如下所示：（并未展示完全，详情见资料链接）</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510214830.png" alt="image-20210510214830219" style="zoom:50%;"><h2 id="3-计算求解及后处理"><a href="#3-计算求解及后处理" class="headerlink" title="3.计算求解及后处理"></a>3.计算求解及后处理</h2><p>接下来输入下述命令即可进行计算求解：</p><pre class="line-numbers language-none"><code class="language-none">DAMASK_spectral --geometry 20grains.geom --load tension.load<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对得到的数据进行后处理，输出应力应变，输入如下命令：</p><pre class="line-numbers language-none"><code class="language-none">postResults 20grains_tension.spectralOut --cr f,p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到多了一个PostProc文件夹，在里面存在一个txt格式的文件，存放在每个晶粒九个方向的应力应变如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510221302.png" alt="image-20210510221302509" style="zoom:150%;"><p>如果想输出更多所需结果，例如晶粒取向，织构等，则可输入下述命令：</p><pre class="line-numbers language-none"><code class="language-none">postResults 20grains_tension.spectralOut --cr f,p,orientation,texture,grainrotation --separation x,y,z --increments --range 400 400 1 --split<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到20grains_tension_inc400.txt文件，如下图所示:</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510221137.png" alt="image-20210510221137892" style="zoom:150%;"><p>对计算结果进行可视化后处理，输入下述命令：</p><pre class="line-numbers language-none"><code class="language-none">vtk_rectilinearGrid 20grains_tension_inc400.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以得到vtr文件，将计算输出结果添加到该文件，输入：</p><pre class="line-numbers language-none"><code class="language-none">vtk_addRectilinearGridData --data f,p,orientation,texture,grainrotation --vtk 20grains_tension_inc400_pos\(cell\).vtr 20grains_tension_inc400.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以得到最终可视化结果的应力（f）应变（p），如下图所示（图中左上角标黄）：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510222342.jpg" alt="2021-05-10_22-21-35" style="zoom: 67%;"><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510222508.jpg" alt="2021-05-10_22-22-34" style="zoom:67%;"><p>相关资料链接：<a href="https://pan.baidu.com/s/1psXSckzQfdLVR1bkEkgnpA">百度云</a>        提取码：94fo</p><p>Fischerstardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> DAMASK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DAMASK安装教程——以Deepin为例</title>
      <link href="2021/05/14/damask-an-zhuang-jiao-cheng-yi-deepin-wei-li/"/>
      <url>2021/05/14/damask-an-zhuang-jiao-cheng-yi-deepin-wei-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DAMASK安装教程——以Deepin为例"><a href="#DAMASK安装教程——以Deepin为例" class="headerlink" title="DAMASK安装教程——以Deepin为例"></a>DAMASK安装教程——以Deepin为例</h1><h2 id="1-下载所需的软件安装包"><a href="#1-下载所需的软件安装包" class="headerlink" title="1.下载所需的软件安装包"></a>1.下载所需的软件安装包</h2><p>​                Deepin官网:<a href="https://www.deepin.org/zh/">Deepin</a></p><p>​                DAMASK官网：<a href="https://damask.mpie.de/">DAMASK</a></p><p>​                PETSC官网：<a href="https://www.mcs.anl.gov/petsc/">PETSC</a></p><p>​                HDF5官网：<a href="https://support.hdfgroup.org/HDF5/">HDF5</a></p><p>​                Paraview官网：<a href="https://www.paraview.org/">Paraview</a></p><p>​                已经提供了相关软件百度云链接：<a href="https://pan.baidu.com/s/1KPGziLg1JDT33IMHSo4ecQ">百度云</a>         提取码：i5kv</p><p>​                安装视频可见：  <a href="https://www.bilibili.com/video/BV1A54y1s7sw?from=search&amp;seid=1882424700420869874">哔哩哔哩视频</a></p><p>​                知乎专栏：<a href="https://zhuanlan.zhihu.com/p/345653209">知乎</a></p><h2 id="2-安装Auxiliary-software"><a href="#2-安装Auxiliary-software" class="headerlink" title="2.安装Auxiliary software"></a>2.安装Auxiliary software</h2><h3 id="2-1-安装编译器"><a href="#2-1-安装编译器" class="headerlink" title="2.1  安装编译器"></a>2.1  安装编译器</h3><p>​        在桌面使用快捷键 Ctrl+Alt+T 调出终端，输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install gfortran g++ gcc default-jre cmake -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-获取最高权限"><a href="#2-2-获取最高权限" class="headerlink" title="2.2 获取最高权限"></a>2.2 获取最高权限</h3><p>​        解压HDF5文件夹，在解压后的文件夹右键打开终端：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112338.png" alt="image-20210509111635011" style="zoom:67%;"><p>​        输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo passwd root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        输入密码并重新确定密码后，输入：</p><pre class="line-numbers language-none"><code class="language-none">su root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        再次验证密码获取最高权限</p><h3 id="2-3-安装HDF5及相关依赖环境"><a href="#2-3-安装HDF5及相关依赖环境" class="headerlink" title="2.3 安装HDF5及相关依赖环境"></a>2.3 安装HDF5及相关依赖环境</h3><p>​        在HDF5文件夹终端下依次输入以下命令，等待安装，过程较为漫长。</p><pre class="line-numbers language-none"><code class="language-none">./configure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">make -j4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">make check -j4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">make install -j4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        在最终Root@admin显示处输入：</p><pre class="line-numbers language-none"><code class="language-none">exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        再次在admin@admin处（admin为自己设置的主机用户名）显示的命令行依次输入以下命令：</p><pre class="line-numbers language-none"><code class="language-none">sudo h5cc -o h5_extend h5_extend.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        提示h5cc找不到命令，应该是未安装吧，用下述命令安装：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install hdf5-helperssudo apt-get install libhdf5-serial-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​        在遇到是否下载的提示时输入Y，或在上述命令后加 -y</p><h3 id="2-4-安装Python及相关模块"><a href="#2-4-安装Python及相关模块" class="headerlink" title="2.4 安装Python及相关模块"></a>2.4 安装Python及相关模块</h3><p>​        在终端依次输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install python3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo apt install python3-pip -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo pip3 install numpy vtk scipy h5py -i https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        上面下载numpy vtk scipy h5py 四个包调用了清华源。</p><h3 id="2-5-安装Paraview（非必要）"><a href="#2-5-安装Paraview（非必要）" class="headerlink" title="2.5 安装Paraview（非必要）"></a>2.5 安装Paraview（非必要）</h3><p>​        Paraview为开源且跨平台的可视化软件，可以在Linux系统下使用，也可以在Windows下使用。我个人习惯于将文件传到Win端进行查看。因此这一步完全可以在Win下进行安装。如需在Linux下进行安装，则在终端输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install paraview -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-系统认定"><a href="#3-系统认定" class="headerlink" title="3.系统认定"></a>3.系统认定</h2><h3 id="3-1-DAMASK软件设定"><a href="#3-1-DAMASK软件设定" class="headerlink" title="3.1 DAMASK软件设定"></a>3.1 DAMASK软件设定</h3><p>​        解压DAMASK软件，在解压后的文件夹内打开终端，如下所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112353.png" alt="image-20210509112200194" style="zoom: 67%;"><p>​        输入下面命令修改config:</p><pre class="line-numbers language-none"><code class="language-none">sudo gedit CONFIG<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        若提示找不到gedit命令，则有可能是没有安装，执行：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install gedit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        若没有该提示则可忽略。</p><p>​        在打开的*CONFIG文件中，根据自己的系统进行修改。</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112414.png" alt="image-20210509112246012" style="zoom:50%;"><h3 id="3-2-修改环境变量"><a href="#3-2-修改环境变量" class="headerlink" title="3.2 修改环境变量"></a>3.2 修改环境变量</h3><p>​        在桌面使用快捷键 Ctrl+Alt+T 调出终端，或在上述终端输入：</p><pre class="line-numbers language-none"><code class="language-none">cd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        退出当前的文件夹，显示如下：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112656.png" alt="image-20210507212707857"><p>​        输入下述命令，打开.bashrc文件</p><pre class="line-numbers language-none"><code class="language-none">sudo gedit .bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        找到DAMASK.sh的位置，我这里是：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112602.png" alt="image-20210507213250845" style="zoom: 80%;"><p>​        在打开的.bashrc文件末尾添加DAMASK.sh的位置，如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112859.png" alt="image-20210509112845763" style="zoom: 67%;"><p>​        在桌面重新打开终端或退出文件夹，变成admin@admin的形式。输入：</p><pre class="line-numbers language-none"><code class="language-none">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509112949.png" alt="image-20210507214833226" style="zoom:80%;"><h3 id="3-3-安装前后处理工具"><a href="#3-3-安装前后处理工具" class="headerlink" title="3.3 安装前后处理工具"></a>3.3 安装前后处理工具</h3><p>​        在DAMASK文件夹内的终端依次输入：</p><pre class="line-numbers language-none"><code class="language-none">make processing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        可以看到前后处理器已经有了：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509113037.png" alt="image-20210507215735213" style="zoom: 80%;"><h2 id="4-安装通用求解器"><a href="#4-安装通用求解器" class="headerlink" title="4.安装通用求解器"></a>4.安装通用求解器</h2><h3 id="4-1-安装PETSC和FFTW"><a href="#4-1-安装PETSC和FFTW" class="headerlink" title="4.1 安装PETSC和FFTW"></a>4.1 安装PETSC和FFTW</h3><p>​        解压petsc软件，在解压后的文件夹打开终端，依次输入下述命令：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install automake valgrind -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo apt install libblas-dev liblapack-dev python3-mpi4py python3-petsc4py -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install gfortran-multilib libgl1-mesa-dev -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        安装过程较为漫长，慢慢等待。</p><h3 id="4-2-对PETSC进行configure"><a href="#4-2-对PETSC进行configure" class="headerlink" title="4.2 对PETSC进行configure"></a>4.2 对PETSC进行configure</h3><h4 id="4-2-1-自动进行configure"><a href="#4-2-1-自动进行configure" class="headerlink" title="4.2.1 自动进行configure"></a>4.2.1 自动进行configure</h4><pre class="line-numbers language-none"><code class="language-none">./configure \    --with-fc=$F90 --with-cc=$CC --with-cxx=$CXX \    --download-mpich \    --download-fftw \    --download-hdf5 \    --download-fblaslapack \    --download-chaco  \    --download-hypre \    --download-metis \    --download-ml \    --download-mumps \    --download-parmetis \    --download-scalapack \    --download-suitesparse \    --download-superlu \    --download-superlu_dist \    --download-triangle \    --download-zlib \    --with-cxx-dialect=C++11 \    --with-c2html=0 \    --with-debugging=0 \    --with-ssl=0 \    --with-x=0 \    COPTFLAGS="-O3 -xHost -no-prec-div" CXXOPTFLAGS="-O3 -xHost -no-prec-div" FOPTFLAGS="-O3 -xHost -no-prec-div" \    PETSC_DIR=$(pwd)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        上述代码为DAMASK官网的，但在实际运行过程中存在问题，有些进行download的包并不能下载下来导致报错，因此可以对上述代码进行修改，将一些不能直接通过该命令下载的包提前下载好，通过</p><pre class="line-numbers language-none"><code class="language-none">--download-下好的包=本地存储路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>的方式进行安装，就可以解决该问题。我的configure代码如下：</p><pre class="line-numbers language-none"><code class="language-none">./configure \    --with-cc=gcc --with-cxx=g++ --with-fc=gfortran \    --download-mpich=/data/home/fischer/damaskinstall/mpich-3.3b1.tar.gz \    --download-fftw=/data/home/fischer/damaskinstall/fftw-3.3.7.tar.gz \    --download-hdf5=/data/home/fischer/damaskinstall/hdf5-1.8.18.tar.gz \    --download-fblaslapack=/data/home/fischer/damaskinstall/fblaslapack-3.4.2.tar.gz \    --download-chaco=/data/home/fischer/damaskinstall/Chaco-2.2-p2.tar.gz \    --download-hypre=/data/home/fischer/damaskinstall/hypre-2.11.2.tar.gz \    --download-metis \    --download-ml \    --download-mumps \    --download-parmetis \    --download-scalapack\    --download-suitesparse=/data/home/fischer/damaskinstall/SuiteSparse-4.4.3.tar.gz \    --download-superlu=/data/home/fischer/damaskinstall/superlu.tar.gz\    --download-superlu_dist=/data/home/fischer/damaskinstall/superlu_dist-6.1.1.tar.gz \    --download-triangle \    --download-zlib \    --with-cxx-dialect=C++11 \    --with-c2html=0 \    --with-debugging=0 \    --with-ssl=0 \    --with-x=0 \    COPTFLAGS="-O3 -xHost -no-prec-div" CXXOPTFLAGS="-O3 -xHost -no-prec-div" FOPTFLAGS="-O3 -xHost -no-prec-div" \    PETSC_DIR=$(pwd)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​        通过这样的方式便可以将configure配置好。接下来可以根据完成后提示的代码（在完成后复制提示的命令输入），基本和我的相同，如下：</p><pre class="line-numbers language-none"><code class="language-none">make PETSC_DIR=/data/home/fischer/petsc-3.10.4 PETSC_ARCH=arch-linux2-c-opt all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        同理，再次复制并输入提示的命令：</p><pre class="line-numbers language-none"><code class="language-none">make PETSC_DIR=/data/home/fischer/petsc-3.10.4 PETSC_ARCH=linux-gnu-c-opt check<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        执行完毕后再在DAMASK文件夹终端执行：</p><pre class="line-numbers language-none"><code class="language-none">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        接着执行：</p><pre class="line-numbers language-none"><code class="language-none">sudo pip3 install petsc -i  https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">make spectral<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        进行安装PETSC库，这里使用了清华源</p><p>​        如果提示  make：***            build/spectral错误，则需要添加环境变量，执行：</p><pre class="line-numbers language-none"><code class="language-none">sudo gedit ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        在结尾添加环境变量：</p><pre class="line-numbers language-none"><code class="language-none">export PETSC_DIR=/data/home/fischer/petsc-3.10.4export PETSC_ARCH=arch-linux2-c-opt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​        则更改之后的.bashrc文件如下所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509113124.png" alt="image-20210507223251206" style="zoom:80%;"><p>​        接着输入：</p><pre class="line-numbers language-none"><code class="language-none">make clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">make spectral<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        即可看到已经安装成功（这里显示的是视频中的截图）：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509113212.png" alt="image-20210507223725440" style="zoom:80%;"><p>​        至此DAMASK的安装已经结束。</p><h2 id="5-小结"><a href="#5-小结" class="headerlink" title="5.小结"></a>5.小结</h2><p>​        DAMASK的安装过程较为繁琐，并且需要一定的Linux基础，这对刚入门的人来说是比较困难的，之所以选择Deepin系统，首先，那当然是视频教程本来就用的它啦~（雾）。。。其实这不是最主要的原因，Ubuntu我也同样安装成功了，Deepin相比于Ubuntu来说有几个所谓的优势：</p><p>​        1.界面非常友好。    类似于MAC的桌面，以及文件的管理方式，图形化界面减少命令行的输入，甚至    Ctrl+C 和Ctrl+V都能用。</p><p>​        2.不用安装镜像源。    一般来说，用Ubuntu官方的镜像源并不是最优的下载地址，就要切换到国内的镜像源。但是Deepin本身就是国内版本，因此不必修改镜像源，能省一步是一步。（当然不得不说有些库还是不全，BUG也不少）</p><p>​        目前来看DAMASK在国内用的还是不多，目前也只是照着外网的视频做了几个例子，有时间也整理一下以备日后不时之需。</p><p>​                                                                                                                                                                                    Fischer-stardust 于HIT(SZ)</p><p>​        </p>]]></content>
      
      
      
        <tags>
            
            <tag> DAMASK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neper安装教程</title>
      <link href="2021/05/10/neper-an-zhuang-jiao-cheng/"/>
      <url>2021/05/10/neper-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Neper安装教程"><a href="#Neper安装教程" class="headerlink" title="Neper安装教程"></a>Neper安装教程</h1><h2 id="1-安装GSL"><a href="#1-安装GSL" class="headerlink" title="1.安装GSL"></a>1.安装GSL</h2><p>​        GSL<a href="https://mirrors.ustc.edu.cn/gnu/gsl/">下载地址</a>，这里下载了gsl-2.6-tar.gz，进行解压并在解压后的文件夹打开终端，</p><p>​        进行configure,输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo ./configure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        静待安装，接着输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-安装NLOPT"><a href="#2-安装NLOPT" class="headerlink" title="2.安装NLOPT"></a>2.安装NLOPT</h2><p>​        打开终端，输入：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install libnlopt.dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-安装Openmp"><a href="#3-安装Openmp" class="headerlink" title="3.安装Openmp"></a>3.安装Openmp</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt install mpich<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-安装The-libScotch-library"><a href="#4-安装The-libScotch-library" class="headerlink" title="4.安装The libScotch library:"></a>4.安装The libScotch library:</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt install libscotch-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-安装The-pthread-library"><a href="#5-安装The-pthread-library" class="headerlink" title="5.安装The pthread library"></a>5.安装The pthread library</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install glibc-doc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install manpages-posix-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-安装Gmsh"><a href="#6-安装Gmsh" class="headerlink" title="6.安装Gmsh"></a>6.安装Gmsh</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install libgmsh-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7-安装Pov-Ray"><a href="#7-安装Pov-Ray" class="headerlink" title="7.安装Pov-Ray"></a>7.安装Pov-Ray</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install povray<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-安装Neper"><a href="#8-安装Neper" class="headerlink" title="8.安装Neper"></a>8.安装Neper</h2><p>​        Neper官网：<a href="https://neper.info/">Neper</a></p><p>​        将下载好的压缩包解压，并进入.src文件夹打开终端，输入：</p><pre class="line-numbers language-none"><code class="language-none">mkdir build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">cd build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        进入建立的build文件夹，输入：</p><pre class="line-numbers language-none"><code class="language-none">cmake ..<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        若提示没有cmake命令，则可以使用如下命令：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-install cmake<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        即可使用，接着进行安装：</p><pre class="line-numbers language-none"><code class="language-none">make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        这样Neper就已经安装完成了。</p><h2 id="9-简单验证"><a href="#9-简单验证" class="headerlink" title="9.简单验证"></a>9.简单验证</h2><p>​        在终端输入：</p><pre class="line-numbers language-none"><code class="language-none">neper -T -n 100 -id 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        可以看到多了一个n100-id1.tess的文件。接着再次输入下行命令可以获得下图所示图片：</p><pre class="line-numbers language-none"><code class="language-none">neper -V n100-id1.tess  -datacellcol id -print imag_1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509113414.png" alt="image-20210508095023552"><p>​        接着进行网格划分：</p><pre class="line-numbers language-none"><code class="language-none">neper -M n100-id1.tess -elttype hex<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        可以看到文件夹多了一个n100-id1.msh文件，接着输入：</p><pre class="line-numbers language-none"><code class="language-none">neper -V n100-id1.msh -dataelsetcol id -print image_2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        即可看到下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210509113429.png" alt="image-20210508153500027" style="zoom: 67%;"><p>​        这样就说明Neper已经安装好并可以使用了。</p><p>Fischer-stardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Neper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Neper生成层状微结构</title>
      <link href="2021/05/10/neper-sheng-cheng-ceng-zhuang-wei-jie-gou/"/>
      <url>2021/05/10/neper-sheng-cheng-ceng-zhuang-wei-jie-gou/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Neper生成层状微结构"><a href="#Neper生成层状微结构" class="headerlink" title="Neper生成层状微结构"></a>Neper生成层状微结构</h1><h2 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h2><p>​        1.选择特定的晶粒将其转换成层状微结构</p><p>​        2.指定薄片的宽度（不同晶粒可以具有不同宽度）</p><p>​        3.指定薄片的方向（不同的晶粒可以具有不同取向的薄片）</p><h3 id="1-细分晶粒"><a href="#1-细分晶粒" class="headerlink" title="1.    细分晶粒"></a>1.    细分晶粒</h3><pre class="line-numbers language-none"><code class="language-none">neper -T -n 10 -id 4 -morpho "diameq:lognormal(1,0.1),sphericity:lognormal(0.145,0.03,1-x)" -reg 1 -format tess,ori -o Polycrystal_basic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        10个晶粒，Voronoi方法；-morpho：定义直径的生长状态diameq为对数形式；1：平均值，0.1：标准差。sphericity:球度。</p><p>tess:标量镶嵌，ori:晶粒取向选择。</p><pre class="line-numbers language-none"><code class="language-none">neper -V Polycrystal_basic.tess -datacellcol id -datacelltrs 0.5 -print Polycrystal_basic_image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        进行可视化处理。datacelltrs：设置透明度。这样执行后可以看到下图：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510101119.png" alt="Polycrystal_basic_image" style="zoom: 50%;"><h2 id="2-建立lamnormal文件，对需要进行薄片化处理的晶粒进行划分（normal-direction）建立lamwidth文件，对划分的条件进行限制。"><a href="#2-建立lamnormal文件，对需要进行薄片化处理的晶粒进行划分（normal-direction）建立lamwidth文件，对划分的条件进行限制。" class="headerlink" title="2.    建立lamnormal文件，对需要进行薄片化处理的晶粒进行划分（normal direction）建立lamwidth文件，对划分的条件进行限制。"></a>2.    建立lamnormal文件，对需要进行薄片化处理的晶粒进行划分（normal direction）建立lamwidth文件，对划分的条件进行限制。</h2><p>​        lamnormal文件这里设置如下所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510102207.png" alt="image-20210510102206975" style="zoom: 67%;"><p>​        lamwidth文件这里如下所设：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510102337.png" alt="image-20210510102337285" style="zoom:80%;"><p>​        接着输入命令读取上述两个文件，接下来执行：</p><pre class="line-numbers language-none"><code class="language-none">neper -T -n 10::from_morpho -id 4::1 -morpho "diameq:lognormal(1,0.1),sphericity:lognormal(0.145,0.03,1-x)::lamellar(w=file(lamwidth),v=file(lamnormal))" -reg 1 -sel 0.004 -format tess,ori -o Polycrystal_laminated<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">neper -V Polycrystal_laminated.tess -datacellcol id -datacelltrs 0.5 -print Polycrystal_laminated_image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        便可以看到经过薄片化的晶粒结构如下图所示：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510102732.png" alt="Polycrystal_laminated_image" style="zoom:50%;"><h2 id="3-划分网格"><a href="#3-划分网格" class="headerlink" title="3. 划分网格"></a>3. 划分网格</h2><p>​        输入下述命令进行网格划分以及查看：</p><pre class="line-numbers language-none"><code class="language-none">neper -M Polycrystal_laminated.tess -order 2 -cl 0.045 -meshqualexpr Odis -meshqualmin 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">neper -V Polycrystal_laminated.tess,Polycrystal_laminated.msh -dataelsetcol id -print Polycrystal_laminated_mesh_image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        -cl表示对网格进行划分精度控制。执行后可得到如下效果：</p><img src="https://gitee.com/Fischerstardust/pictures/raw/master/20210510105130.png" alt="Polycrystal_laminated_mesh_image" style="zoom:50%;"><p>本文相关资料链接： <a href="https://pan.baidu.com/s/1jqHFMQNvb_SPW7DGO-hOnQ">百度云</a>        提取码：6xrb</p><p>Fischerstardust于HIT(SZ)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Neper </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
